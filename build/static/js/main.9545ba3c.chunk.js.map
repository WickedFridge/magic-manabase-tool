{"version":3,"sources":["components/decklistInput.js","components/submitButton.js","components/resultTable.js","components/appBody.js","App.js","serviceWorker.js","index.js"],"names":["CssTextField","withStyles","root","width","color","borderBottomColor","borderColor","TextField","useStyles","makeStyles","theme","display","flexWrap","margin","spacing","input","DecklistInput","props","classes","className","noValidate","label","variant","id","multiline","value","onChange","rows","InputProps","InputLabelProps","ColorButton","backgroundColor","green","palette","getContrastText","orange","yellow","disabled","Button","SubmitButton","onClick","StyledTableCell","head","common","black","white","body","fontSize","grey","TableCell","StyledTableRow","background","default","TableRow","table","maxWidth","maxHeight","row","getBackgroundColor","val","parseInt","red","blueGrey","forEach","threshold","ResultTable","TableContainer","component","Paper","Table","size","aria-label","TableHead","align","TableBody","data","map","key","style","ratio","scope","createRows","Object","entries","defaultRows","paper","padding","textAlign","circular","createMuiTheme","type","AppBody","React","useState","loading","setLoading","setRows","decklist","setDecklist","ThemeProvider","Grid","container","item","xs","event","target","direction","justify","alignItems","Box","height","Fade","in","transitionDelay","unmountOnExit","CircularProgress","thickness","deck","split","console","log","axios","method","url","then","res","catch","e","App","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"iSAQMA,EAAeC,YAAW,CAC5BC,KAAM,CACFC,MAAO,OACP,sBAAuB,CACnBC,MAAO,SAEX,8BAA+B,CAC3BC,kBAAmB,SAEvB,2BAA4B,CACxB,aAAc,CACVC,YAAa,UAEjB,mBAAoB,CAChBA,YAAa,UAEjB,yBAA0B,CACtBA,YAAa,YAjBRL,CAqBlBM,KAEGC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCR,KAAM,CACFS,QAAS,OACTC,SAAU,QAEdC,OAAQ,CACJA,OAAQH,EAAMI,QAAQ,IAE1BC,MAAO,CACHX,MAAO,iBAIA,SAASY,EAAcC,GAClC,IAAMC,EAAUV,IAEhB,OACI,0BAAMW,UAAWD,EAAQhB,KAAMkB,YAAU,GACrC,kBAACpB,EAAD,CACImB,UAAWD,EAAQL,OACnBQ,MAAM,WACNC,QAAQ,WACRC,GAAG,4BACHC,WAAS,EACTC,MAAOR,EAAMQ,MACbC,SAAUT,EAAMS,SAChBtB,MAAM,YACNuB,KAAM,GACNC,WAAY,CACRT,UAAWD,EAAQH,OAEvBc,gBAAiB,CACbV,UAAWD,EAAQH,U,sCC1DjCe,EAAc7B,aAAW,SAACS,GAAD,MAAY,CACvCR,KAAM,CACF,aAAc,CACV6B,gBAAiBC,IAAM,MAE3B5B,MAAOM,EAAMuB,QAAQC,gBAAgBC,IAAO,MAC5CJ,gBAAiBI,IAAO,KACxB,UAAW,CACPJ,gBAAiBK,IAAO,OAGhCC,SAAU,MAXMpC,CAchBqC,KAEE9B,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCR,KAAM,CACFW,OAAQH,EAAMI,QAAQ,QAIf,SAASyB,EAAatB,GACjC,IAAMC,EAAUV,IAEhB,OACI,6BACI,kBAACsB,EAAD,CACIR,QAAQ,YACRlB,MAAM,UACNoC,QAASvB,EAAMuB,QACfH,SAAUpB,EAAMoB,SAChBnB,QAAS,CACLhB,KAAMgB,EAAQhB,KACdmC,SAAUnB,EAAQmB,WAP1B,W,gICrBNI,EAAkBxC,aAAW,SAACS,GAAD,MAAY,CAC3CgC,KAAM,CACFX,gBAAiBrB,EAAMuB,QAAQU,OAAOC,MACtCxC,MAAOM,EAAMuB,QAAQU,OAAOE,OAEhCC,KAAM,CACFC,SAAU,GACV3C,MAAOM,EAAMuB,QAAQe,SAPL/C,CASpBgD,KAEEC,EAAiBjD,aAAW,SAACS,GAAD,MAAY,CAC1CR,KAAM,CACF,qBAAsB,CAClB6B,gBAAiBrB,EAAMuB,QAAQkB,WAAWC,aAH/BnD,CAMnBoD,KAEE7C,EAAYC,YAAW,CACzB6C,MAAO,CACHC,SAAU,MACVC,UAAW,KAEfC,IAAK,CACDD,UAAW,UAIbE,EAAqB,SAACjC,GACxB,IAAIM,EACE4B,EAAMC,SAASnC,GACrB,OAAIkC,EAAM,GACC,CAAE5B,gBAAkB8B,IAAI,OAEnC,CACI,CAAC,GAAIC,IAAS,MACd,CAAC,GAAIA,IAAS,MACd,CAAC,GAAIA,IAAS,MACd,CAAC,GAAIA,IAAS,MACd,CAAC,GAAIA,IAAS,MACd,CAAC,GAAIA,IAAS,MACd,CAAC,GAAIA,IAAS,OAChBC,SAAQ,YAAyB,IAAD,mBAAtBC,EAAsB,KAAX5D,EAAW,KAC1BuD,GAAOK,IACPjC,EAAkB3B,MAGnB,CACH2B,qBAIO,SAASkC,EAAYhD,GAChC,IAAMC,EAAUV,IAEhB,OACI,kBAAC0D,EAAA,EAAD,CAAgB/C,UAAWD,EAAQoC,MAAOa,UAAWC,KACjD,kBAACC,EAAA,EAAD,CAAOC,KAAK,QAAQC,aAAW,oBAC3B,kBAACC,EAAA,EAAD,KACI,kBAACnB,EAAA,EAAD,KACI,kBAACZ,EAAD,CAAiBgC,MAAM,QAAvB,QACA,kBAAChC,EAAD,CAAiBgC,MAAM,UAAvB,WAGR,kBAACC,EAAA,EAAD,CAAWvD,UAAWD,EAAQyD,MACzB1D,EAAMU,KAAKiD,KAAI,SAACnB,GAAD,OACZ,kBAACP,EAAD,CAAgB/B,UAAWD,EAAQuC,IAAKoB,IAAKpB,EAAIoB,IAAKC,MAAOpB,EAAmBD,EAAIsB,QAChF,kBAACtC,EAAD,CAAiBtB,UAAWD,EAAQuC,IAAKU,UAAU,KAAKa,MAAM,MAAMP,MAAM,QACrEhB,EAAIoB,KAET,kBAACpC,EAAD,CAAiBgC,MAAM,UAAUhB,EAAIsB,c,8BC+E3DE,EAAa,SAACN,GAAD,OAAUO,OAAOC,QAAQR,GAAMC,KAAI,yCAAuB,CAAEC,IAAzB,KAA8BE,MAA9B,KAASA,WAEzDK,EAAcH,EAxHA,CAChB,gBAAiB,CACb,GAAM,KACN,IAAO,IACP,MAAS,UAEb,qBAAsB,CAClB,GAAM,EACN,IAAO,KACP,MAAS,SAEb,kBAAmB,CACf,GAAM,KACN,IAAO,GACP,MAAS,UAEb,YAAe,CACX,GAAM,KACN,IAAO,GACP,MAAS,UAEb,gBAAiB,CACb,GAAM,KACN,IAAO,GACP,MAAS,UAEb,wBAAyB,CACrB,GAAM,KACN,IAAO,IACP,MAAS,UAEb,4BAA6B,CACzB,GAAM,KACN,IAAO,EACP,MAAS,UAEb,iBAAkB,CACd,GAAM,KACN,IAAO,GACP,MAAS,UAEb,cAAe,CACX,GAAM,KACN,IAAO,GACP,MAAS,UAEb,UAAa,CACT,GAAM,KACN,IAAO,EACP,MAAS,UAEb,iBAAkB,CACd,GAAM,KACN,IAAO,GACP,MAAS,UAEb,yBAA0B,CACtB,GAAM,KACN,IAAO,GACP,MAAS,UAEb,uBAAwB,CACpB,GAAM,KACN,IAAO,GACP,MAAS,UAEb,cAAiB,CACb,GAAM,KACN,IAAO,GACP,MAAS,UAEb,OAAU,CACN,GAAM,KACN,IAAO,GACP,MAAS,UAEb,iBAAkB,CACd,GAAM,KACN,IAAO,IACP,MAAS,UAEb,kBAAmB,CACf,GAAM,KACN,IAAO,IACP,MAAS,UAEb,sBAAuB,CACnB,GAAM,KACN,IAAO,GACP,MAAS,UAEb,sBAAuB,CACnB,GAAM,KACN,IAAO,IACP,MAAS,UAEb,sBAAuB,CACnB,GAAM,KACN,IAAO,IACP,MAAS,UAEb,eAAgB,CACZ,GAAM,EACN,IAAO,KACP,MAAS,SAEb,oBAAqB,CACjB,GAAM,KACN,IAAO,IACP,MAAS,UAEb,eAAgB,CACZ,GAAM,KACN,IAAO,GACP,MAAS,YAQXzE,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCR,KAAM,CACFC,MAAO,SAEXkF,MAAO,CACHC,QAAS5E,EAAMI,QAAQ,GACvByE,UAAW,SACXnF,MAAO4B,IAAM,KAEbD,gBAAiB,WAErByD,SAAU,CACNpF,MAAO4B,IAAM,UAIftB,EAAQ+E,YAAe,CACzBxD,QAAS,CACLyD,KAAM,UAIC,SAASC,IACpB,IAAMzE,EAAUV,IADc,EAEAoF,IAAMC,UAAS,GAFf,mBAEvBC,EAFuB,KAEdC,EAFc,OAGNH,IAAMC,SAAST,GAHT,mBAGvBzD,EAHuB,KAGjBqE,EAHiB,OAIEJ,IAAMC,SAjLnB,oeA6KW,mBAIvBI,EAJuB,KAIbC,EAJa,KAwB9B,OACI,yBAAK/E,UAAWD,EAAQhB,MACpB,kBAACiG,EAAA,EAAD,CAAezF,MAAOA,GAClB,kBAAC0F,EAAA,EAAD,CAAMC,WAAS,EAACvF,QAAS,GACrB,kBAACsF,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,kBAACnC,EAAA,EAAD,CAAOjD,UAAWD,EAAQmE,OACtB,yFAGR,kBAACe,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACX,kBAACnC,EAAA,EAAD,CAAOjD,UAAWD,EAAQmE,OACtB,kBAACrE,EAAD,CACIS,MAAOwE,EACPvE,SAAU,SAAC8E,GAAD,OAAWN,EAAYM,EAAMC,OAAOhF,YAI1D,kBAAC2E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACX,kBAACH,EAAA,EAAD,CACIC,WAAS,EACTK,UAAU,SACVC,QAAQ,eACRC,WAAW,UACX9F,QAAS,GAET,kBAACsF,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,kBAACnC,EAAA,EAAD,CAAOjD,UAAWD,EAAQmE,OACtB,kBAACwB,EAAA,EAAD,CACI/B,MAAO,CAACgC,OAAQ,WAChBnG,QAAQ,OACRiG,WAAW,UAEX,kBAACR,EAAA,EAAD,CACIC,WAAS,EACTK,UAAU,SACVC,QAAQ,SACRC,WAAW,UAGPd,EACI,kBAACiB,EAAA,EAAD,CACIC,GAAIlB,EACJhB,MAAO,CACHmC,gBAAiB,SAErBC,eAAa,GAEb,kBAACC,EAAA,EAAD,CACIhG,UAAWD,EAAQsE,SACnBlB,KAAM,IACN8C,UAAW,KAGnB,kBAACL,EAAA,EAAD,CACIC,IAAKlB,EACLoB,eAAa,EACbpC,MAAO,CACHmC,gBAAiB,UAGrB,kBAAChD,EAAD,CACItC,KAAMA,SAQtC,kBAACyE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,kBAACnC,EAAA,EAAD,CAAOjD,UAAWD,EAAQmE,OACtB,kBAAC9C,EAAD,CACIC,QA1FV,WACtBuD,GAAW,GACX,IAAMpB,EAAO,CAAE0C,KAAMpB,EAASqB,MAAM,OACpCC,QAAQC,IAAI7C,GACZ8C,IAAM,CACFC,OAAQ,OACRC,IAAK,uEACLhD,SAECiD,MAAK,SAAAC,GACF9B,GAAW,GACXC,EAAQf,EAAW4C,EAAIlD,UAE1BmD,OAAM,SAAAC,GACHhC,GAAW,OA6Ea1D,SAAUyD,WC5QnCkC,MAZf,WACE,OACE,yBAAK7G,UAAU,OACb,4BAAQA,UAAU,cAChB,gDACE,4BAAI,uBAAG8G,KAAK,oCAAR,wBAER,kBAACtC,EAAD,QCCcuC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlB,MAAK,SAAAmB,GACJA,EAAaC,gBAEdlB,OAAM,SAAAmB,GACL1B,QAAQ0B,MAAMA,EAAMC,c","file":"static/js/main.9545ba3c.chunk.js","sourcesContent":["import React from 'react';\nimport {\n    withStyles,\n    makeStyles,\n} from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { green, cyan } from '@material-ui/core/colors';\n\nconst CssTextField = withStyles({\n    root: {\n        width: '50ch',\n        '& label.Mui-focused': {\n            color: 'green',\n        },\n        '& .MuiInput-underline:after': {\n            borderBottomColor: 'green',\n        },\n        '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n                borderColor: 'orange',\n            },\n            '&:hover fieldset': {\n                borderColor: 'yellow',\n            },\n            '&.Mui-focused fieldset': {\n                borderColor: 'green',\n            },\n        },\n    },\n})(TextField);\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    margin: {\n        margin: theme.spacing(1),\n    },\n    input: {\n        color: \"lightgrey\",\n    }\n}));\n\nexport default function DecklistInput(props) {\n    const classes = useStyles();\n\n    return (\n        <form className={classes.root} noValidate>\n            <CssTextField\n                className={classes.margin}\n                label=\"Decklist\"\n                variant=\"outlined\"\n                id=\"custom-css-outlined-input\"\n                multiline\n                value={props.value}\n                onChange={props.onChange}\n                color=\"secondary\"\n                rows={25}\n                InputProps={{\n                    className: classes.input\n                }}\n                InputLabelProps={{\n                    className: classes.input\n                }}\n            />\n        </form>\n    );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport {green, orange, yellow} from \"@material-ui/core/colors\";\n\nconst ColorButton = withStyles((theme) => ({\n    root: {\n        '&$disabled': {\n            backgroundColor: green[900],\n        },\n        color: theme.palette.getContrastText(orange[800]),\n        backgroundColor: orange[800],\n        '&:hover': {\n            backgroundColor: yellow[700],\n        },\n    },\n    disabled: {\n\n    }\n}))(Button);\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(1),\n    },\n}));\n\nexport default function SubmitButton(props) {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <ColorButton\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={props.onClick}\n                disabled={props.disabled}\n                classes={{\n                    root: classes.root,\n                    disabled: classes.disabled,\n                }}\n            >\n                Submit\n            </ColorButton>\n        </div>\n    );\n}\n","import React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { red, blueGrey } from \"@material-ui/core/colors\";\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 13,\n        color: theme.palette.grey,\n    },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n    table: {\n        maxWidth: '70%',\n        maxHeight: 400,\n    },\n    row: {\n        maxHeight: '10px',\n    },\n});\n\nconst getBackgroundColor = (value) => {\n    let backgroundColor;\n    const val = parseInt(value);\n    if (val < 50) {\n        return { backgroundColor : red[800] };\n    }\n    [\n        [60, blueGrey[300]],\n        [70, blueGrey[400]],\n        [75, blueGrey[500]],\n        [80, blueGrey[600]],\n        [85, blueGrey[700]],\n        [90, blueGrey[800]],\n        [95, blueGrey[900]],\n    ].forEach(([threshold, color]) => {\n        if (val >= threshold) {\n            backgroundColor = color;\n        }\n    });\n    return {\n        backgroundColor\n    };\n};\n\nexport default function ResultTable(props) {\n    const classes = useStyles();\n\n    return (\n        <TableContainer className={classes.table} component={Paper}>\n            <Table size=\"small\" aria-label=\"customized table\">\n                <TableHead>\n                    <TableRow>\n                        <StyledTableCell align=\"left\">Card</StyledTableCell>\n                        <StyledTableCell align=\"center\">Ratio</StyledTableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody className={classes.data}>\n                    {props.rows.map((row) => (\n                        <StyledTableRow className={classes.row} key={row.key} style={getBackgroundColor(row.ratio)}>\n                            <StyledTableCell className={classes.row} component=\"th\" scope=\"row\" align=\"left\">\n                                {row.key}\n                            </StyledTableCell>\n                            <StyledTableCell align=\"center\">{row.ratio}</StyledTableCell>\n                        </StyledTableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n","import React from 'react';\nimport DecklistInput from \"./decklistInput\";\nimport SubmitButton from \"./submitButton\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from \"@material-ui/core/Paper\";\nimport { orange, green } from \"@material-ui/core/colors\";\nimport {CircularProgress, createMuiTheme} from \"@material-ui/core\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Box from \"@material-ui/core/Box\";\nimport ResultTable from \"./resultTable\";\nimport {ThemeProvider} from \"@material-ui/styles\";\nimport axios from 'axios';\n\nconst defaultDeckist = \"1 Baleful Strix\\n\" +\n    \"1 Imperial Recruiter\\n\" +\n    \"1 Midnight Reaper\\n\" +\n    \"1 Ophiomancer\\n\" +\n    \"1 Bone Shredder\\n\" +\n    \"1 Glen Elendra Archmage\\n\" +\n    \"1 Shriekmaw\\n\" +\n    \"1 The Scarab God\\n\" +\n    \"1 Grave Titan\\n\" +\n    \"1 Duplicant\\n\" +\n    \"1 Underground Sea\\n\" +\n    \"1 Watery Grave\\n\" +\n    \"5 Island\\n\" +\n    \"8 Swamp\\n\" +\n    \"1 Vampiric Tutor\\n\" +\n    \"1 Inquisition of Kozilek\\n\" +\n    \"1 Collective Brutality\\n\" +\n    \"1 Bitterblossom\\n\" +\n    \"1 Exhume\\n\" +\n    \"1 Chart a Course\\n\" +\n    \"1 Thought Erasure\\n\" +\n    \"1 Recurring Nightmare\\n\" +\n    \"1 Liliana of the Veil\\n\" +\n    \"1 Compulsive Research\\n\" +\n    \"1 Birthing Pod\\n\" +\n    \"1 Mystic Confluence\\n\" +\n    \"1 Living Death\";\n\n\nconst defaultData = {\n    \"Baleful Strix\": {\n        \"ok\": 4692,\n        \"nok\": 236,\n        \"ratio\": \"95.21%\"\n    },\n    \"Imperial Recruiter\": {\n        \"ok\": 0,\n        \"nok\": 4823,\n        \"ratio\": \"0.00%\"\n    },\n    \"Midnight Reaper\": {\n        \"ok\": 4807,\n        \"nok\": 16,\n        \"ratio\": \"92.67%\"\n    },\n    \"Ophiomancer\": {\n        \"ok\": 4807,\n        \"nok\": 16,\n        \"ratio\": \"88.67%\"\n    },\n    \"Bone Shredder\": {\n        \"ok\": 4807,\n        \"nok\": 16,\n        \"ratio\": \"79.67%\"\n    },\n    \"Glen Elendra Archmage\": {\n        \"ok\": 4242,\n        \"nok\": 126,\n        \"ratio\": \"81.12%\"\n    },\n    \"Emrakul, The Promised End\": {\n        \"ok\": 3002,\n        \"nok\": 1,\n        \"ratio\": \"99.97%\"\n    },\n    \"The Scarab God\": {\n        \"ok\": 2946,\n        \"nok\": 57,\n        \"ratio\": \"98.10%\"\n    },\n    \"Grave Titan\": {\n        \"ok\": 4995,\n        \"nok\": 10,\n        \"ratio\": \"71.80%\"\n    },\n    \"Duplicant\": {\n        \"ok\": 5005,\n        \"nok\": 0,\n        \"ratio\": \"64.00%\"\n    },\n    \"Vampiric Tutor\": {\n        \"ok\": 4872,\n        \"nok\": 56,\n        \"ratio\": \"98.86%\"\n    },\n    \"Inquisition of Kozilek\": {\n        \"ok\": 4872,\n        \"nok\": 56,\n        \"ratio\": \"98.86%\"\n    },\n    \"Collective Brutality\": {\n        \"ok\": 4902,\n        \"nok\": 26,\n        \"ratio\": \"99.47%\"\n    },\n    \"Bitterblossom\": {\n        \"ok\": 4902,\n        \"nok\": 26,\n        \"ratio\": \"99.47%\"\n    },\n    \"Exhume\": {\n        \"ok\": 4902,\n        \"nok\": 26,\n        \"ratio\": \"99.47%\"\n    },\n    \"Chart a Course\": {\n        \"ok\": 4718,\n        \"nok\": 210,\n        \"ratio\": \"95.74%\"\n    },\n    \"Thought Erasure\": {\n        \"ok\": 4692,\n        \"nok\": 236,\n        \"ratio\": \"95.21%\"\n    },\n    \"Recurring Nightmare\": {\n        \"ok\": 4807,\n        \"nok\": 16,\n        \"ratio\": \"99.67%\"\n    },\n    \"Liliana of the Veil\": {\n        \"ok\": 4557,\n        \"nok\": 266,\n        \"ratio\": \"94.48%\"\n    },\n    \"Compulsive Research\": {\n        \"ok\": 4641,\n        \"nok\": 182,\n        \"ratio\": \"96.23%\"\n    },\n    \"Birthing Pod\": {\n        \"ok\": 0,\n        \"nok\": 4368,\n        \"ratio\": \"0.00%\"\n    },\n    \"Mystic Confluence\": {\n        \"ok\": 2457,\n        \"nok\": 546,\n        \"ratio\": \"81.82%\"\n    },\n    \"Living Death\": {\n        \"ok\": 2952,\n        \"nok\": 51,\n        \"ratio\": \"98.30%\"\n    }\n};\n\nconst createRows = (data) => Object.entries(data).map(([key, { ratio }]) => ({ key, ratio }));\n\nconst defaultRows = createRows(defaultData);\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '130vh',\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: green[700],\n        // backgroundColor: '#341700',\n        backgroundColor: '#1b222b',\n    },\n    circular: {\n        color: green[700],\n    }\n}));\n\nconst theme = createMuiTheme({\n    palette: {\n        type: \"dark\"\n    }\n});\n\nexport default function AppBody() {\n    const classes = useStyles();\n    const [loading, setLoading] = React.useState(false);\n    const [rows, setRows] = React.useState(defaultRows);\n    const [decklist, setDecklist] = React.useState(defaultDeckist);\n\n    const handleClickSubmit = () => {\n        setLoading(true);\n        const data = { deck: decklist.split('\\n') };\n        console.log(data);\n        axios({\n            method: 'post',\n            url: 'http://localhost:5001/project-manabase/europe-west2/decklist/analyze',\n            data,\n        })\n            .then(res => {\n                setLoading(false);\n                setRows(createRows(res.data));\n            })\n            .catch(e => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div className={classes.root}>\n            <ThemeProvider theme={theme}>\n                <Grid container spacing={3}>\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}>\n                            <p>Paste your decklist in the field below then press Submit</p>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <Paper className={classes.paper}>\n                            <DecklistInput\n                                value={decklist}\n                                onChange={(event) => setDecklist(event.target.value)}\n                            />\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={8}>\n                        <Grid\n                            container\n                            direction=\"column\"\n                            justify=\"space-evenly\"\n                            alignItems=\"stretch\"\n                            spacing={3}\n                        >\n                            <Grid item xs={12}>\n                                <Paper className={classes.paper}>\n                                    <Box\n                                        style={{height: '53.25vh'}}\n                                        display=\"flex\"\n                                        alignItems=\"center\"\n                                    >\n                                        <Grid\n                                            container\n                                            direction=\"column\"\n                                            justify=\"center\"\n                                            alignItems=\"center\"\n                                        >\n                                            {\n                                                loading ?\n                                                    <Fade\n                                                        in={loading}\n                                                        style={{\n                                                            transitionDelay: '500ms',\n                                                        }}\n                                                        unmountOnExit\n                                                    >\n                                                        <CircularProgress\n                                                            className={classes.circular}\n                                                            size={100}\n                                                            thickness={2}\n                                                        />\n                                                    </Fade> :\n                                                    <Fade\n                                                        in={!loading}\n                                                        unmountOnExit\n                                                        style={{\n                                                            transitionDelay: '500ms',\n                                                        }}\n                                                    >\n                                                        <ResultTable\n                                                            rows={rows}\n                                                        />\n                                                    </Fade>\n                                            }\n                                        </Grid>\n                                    </Box>\n                                </Paper>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Paper className={classes.paper}>\n                                    <SubmitButton\n                                        onClick={handleClickSubmit}\n                                        disabled={loading}\n                                    />\n                                </Paper>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </ThemeProvider>\n        </div>\n    );\n}\n","import React from 'react';\nimport './App.css';\nimport AppBody from \"./components/appBody\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Project Manabase</h1>\n          <h4><a href=\"https://twitter.com/wickedfridge\">By Charles Wickham</a></h4>\n      </header>\n      <AppBody/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}